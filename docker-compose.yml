networks:
  loki:
  traefik:
    external: true

services:
  loki:
    build:
      context: ./loki
      dockerfile: Dockerfile
    # ports:
      # - "3100:3100"
    volumes:
      - /Users/zz_mm/Desktop/loki:/loki
    command: -config.file=/etc/loki/local-config.yaml
    restart: unless-stopped
    networks:
      - loki
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.loki.rule=Host(`loki.zzbyte.dev`)"
      - "traefik.http.services.loki.loadbalancer.server.port=3100"
      - "traefik.http.services.loki.loadbalancer.server.scheme=http"

  promtail:
    build:
      context: ./promtail
      dockerfile: Dockerfile
    command: -config.file=/etc/promtail/config.yml
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: unless-stopped
    networks:
      - loki

  grafana:
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_FEATURE_TOGGLES_ENABLE=alertingSimplifiedRouting,alertingQueryAndExpressionsStepMode
      - GF_SERVER_DOMAIN=grafana.zzbyte.dev
      - GF_SERVER_ROOT_URL=https://grafana.zzbyte.dev
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy 
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: true
          version: 1
          editable: false
        EOF
        exec /run.sh
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - /Users/zz_mm/Desktop/grafana:/var/lib/grafana
    networks:
      - loki
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik"
      - "traefik.http.routers.grafana.rule=Host(`grafana.zzbyte.dev`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.services.grafana.loadbalancer.server.scheme=http"
    restart: unless-stopped
  prometheus:
      build:
        context: ./prometheus
        dockerfile: Dockerfile
      volumes:
        - /Users/zz_mm/Desktop/prometheus/prometheus:/prometheus
      command:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--storage.tsdb.retention.size=256MB'
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=traefik"
        - "traefik.http.routers.prometheus.rule=Host(`prometheus.zzbyte.dev`)"
        - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
        - "traefik.http.services.prometheus.loadbalancer.server.scheme=http"
      networks:
        - loki
        - traefik
      restart: unless-stopped
      logging:
        options:
          max-size: "10m"
          max-file: "3"
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'